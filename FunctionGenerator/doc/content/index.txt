FunctionGeneratorName - English
========================

.. toctree::
   :hidden:

   index_j


Introduction
============


For a full list of classes and functions, see the `API documentation`_.

.. _`API Documentation`:
   doxygen/html/index.html

Requirements
============

FunctionGenerator uses the `CMake build system`. You will need at least version
2.8 to be able to build the component.

.. _`CMAke build system`:
   http://www.cmake.org


Installation
============

Binary
------

Users of Windows can install the component using the binary installer. This
will install the component and all its necessary dependencies. It is the
recommended method of installation in Windows.

- Download the installer from the website.
- Double-click the executable file to begin installation.
- Follow the instructions to install the component.
- You may need to restart your computer for environment variable changes
  to take effect before using the component.

The component can be launched by double-clicking the
``FunctionGeneratorComp`` executable. The ``FunctionGenerator`` library
is available for loading into a manager, using the initialisation function
``FunctionGeneratorInit``.

From source
-----------

Follow these steps to install FunctionGenerator from source in any operating
system:

- Download the source, either from the repository or a source archive,
  and extract it somewhere::

    tar -xvzf FunctionGenerator-1.0.0.tar.gz

- Change to the directory containing the extracted source::

    cd FunctionGenerator-1.0.0

- Create a directory called ``build``::

    mkdir build

- Change to that directory::

    cd build

- Run cmake or cmake-gui::

    cmake ../

- If no errors occurred, run make::

    make

- Finally, install the component. Ensure the necessary permissions to
  install into the chosen prefix are available::

    make install

- The install destination can be changed by executing ccmake and changing
  the variable ``CMAKE_INSTALL_PREFIX``::

    ccmake ../

The component is now ready for use. See the next section for instructions on
configuring the component.

FunctionGenerator can be launched in stand-alone mode by executing the
``FunctionGeneratorComp`` executable (installed into ``${prefix}/components/bin``).
Alternatively, ``libFunctionGenerator.so`` can be loaded into a manager, using the
initialisation function ``FunctionGeneratorInit``. This shared object can be found in
``${prefix}/components/lib`` or ``${prefix}/components/lib64``.


Configuration
=============

The available configuration parameters are described below:

================ ================== ================ ======
Parameter        Data type          Default Value    Effect
================ ================== ================ ======
xMin             double             0.0              変数xの最小値。
xMax             double             10.0             変数xの最大値。
xDelta           double             1.0              変数xの増加量。
tMin             double             0.0              変数tの最小値。
tMax             double             10.0             変数tの最大値。
tDelta           double             1.0              変数tの増加量。
saveFileMode     char               a                入力データを保存するときのモード。<br/>a:既存のファイルに追記。<br/>w:アクティブ化時またはアクティブ化後のsaveFileMode再設定時に既存のファイルを上書き。
saveFileName     string             *                
outputFunctionOrLoadFileName string             *                出力する関数または読み込むファイル名。
================ ================== ================ ======

Ports
=====

The ports provided by the component are described below:

=============== =========== ============================== =======
Name            Type        Data type                      Purpose
=============== =========== ============================== =======
iOctetSeqData   InPort      RTC::TimedOctetSeq             ファイルに保存するoctet型数値列データ。
iShortSeqData   InPort      RTC::TimedShortSeq             ファイルに保存するshort型整数値列データ。
iLongSeqData    InPort      RTC::TimedLongSeq              ファイルに保存するlong型整数値列データ。
iFloatSeqData   InPort      RTC::TimedFloatSeq             ファイルに保存するfloat型実数値列データ。
iDoubleSeqData  InPort      RTC::TimedDoubleSeq            ファイルに保存するdouble型実数値列データ。
oOctetSeqData   OutPort     RTC::TimedOctetSeq             octet型数値列の出力データ。
oShortSeqData   OutPort     RTC::TimedShortSeq             short型整数値列の出力データ。
oLongSeqData    OutPort     RTC::TimedLongSeq              long型整数値列の出力データ。
oFloatSeqData   OutPort     RTC::TimedFloatSeq             float型実数値列の出力データ。
oDoubleSeqData  OutPort     RTC::TimedDoubleSeq            double型実数値列の出力データ。
=============== =========== ============================== =======

Examples
========

An example configuration file is provided in the
``${prefix}/components/share/FunctionGenerator/examples/conf/`` directory.

Changelog
=========



License
=======

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

